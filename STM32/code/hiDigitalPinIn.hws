include("General")

func init()
  fvar(tmp, old)

  if(PRJ_NAME == 'stm32f407')
    include_file('stm32f4xx_gpio.h')
    include_file('stm32f4xx_rcc.h')
  elseif(PRJ_NAME == 'stm32f103')
    include_file('stm32f10x_gpio.h')
    include_file('stm32f10x_rcc.h') 
  end

  decl_var_val(tim_cnt, 'int', 0)
  decl_var_val(tim_tgl, 'char', 0)
  decl_var_val(sts_tgl, 'char', 0)
  
  tmp = block.reggen()
  old = block.select(tmp)
    println('Hi_GPIO_InitIn(GPIO',Port,', GPIO_Pin_',PinNumber,');')
  move_block_to(BLK_INIT)
  
  tmp = block.reggen()
  block.select(tmp)
    println('if((',tim_tgl,' == 0) && (GPIO_ReadInputDataBit(GPIO',Port,', GPIO_Pin_',PinNumber,') != ',sts_tgl,')) {')
      block.inclvl()
        println(tim_tgl,' = 1;')
      block.declvl()
    println('}')
  move_block_to(BLK_LOOP)
  
  timer_enable()
  tmp = block.reggen()
  block.select(tmp)
    println('// ================== DigitalPinIn_',code(_id_),'_Timer ==================')
    println('if(',tim_tgl,') if(',tim_cnt,' < ',code(BounceTime),') {')
      block.inclvl()
        println(tim_cnt,'++;')
      block.declvl()
    println('} else {')
      block.inclvl()
        println(tim_tgl,' = 0;')
        println(tim_cnt,' = 0;')
        println(sts_tgl,' = !',sts_tgl,';')
        println('if(',sts_tgl,') {')
          block.inclvl()
            event(onKeyOff)
          block.declvl()       
        println('} else {')
          block.inclvl()
            event(onKeyOn)
          block.declvl()
        println('}')
      block.declvl()
    println('}')
    println('// ============================================================')
  move_block_to(BLK_TIMER)
  
  block.select(old)
end

func State()
  return(to_type(sts_tgl, DT_CHAR))
end